name: tox

on:
  create:  # is used for publishing to TestPyPI
    tags:  # any tag regardless of its name, no branches
      - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
      - "master"
  pull_request:
  release:
    types:
      - published  # It seems that you can publish directly without creating
  schedule:
    - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: lint
            tox_env: lint
          - name: packaging
            tox_env: packaging
          - name: doc
            tox_env: doc
          - name: py36
            tox_env: py36
          - name: py37
            tox_env: py37
          - name: py38
            tox_env: py38
          - name: py39
            tox_env: py39
          - name: py38-macos
            tox_env: py38
            os: macOS-latest
            python-version: 3.8

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # needed by setuptools-scm
      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.split('-')[0].lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))
      # Even our lint and other envs need access to tox
      - name: Install a default Python
        uses: actions/setup-python@v2
        if: ${{ ! contains(matrix.tox_env, 'py') }}
      # Be sure to install the version of python needed by a specific test, if necessary
      - name: Set up Python version
        uses: actions/setup-python@v2
        if: ${{ contains(matrix.tox_env, 'py') }}
        with:
          python-version: ${{ steps.py_ver.outputs.version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install tox
      - name: Run tox -e ${{ matrix.tox_env }}
        run: |
          echo "${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}"
          ${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}

  publish:
    name: Publish
    # see https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#release
    if: >-
      (
        github.event_name == 'push' &&
        github.ref == format(
          'refs/heads/{0}', github.event.repository.default_branch
        )
      ) ||
      (
        github.event_name == 'create' &&
        github.event.ref_type == 'tag'
      ) ||
      (
        github.event_name == 'release' &&
        github.event.action == 'published'
      )
    needs:
      - build
    runs-on: ubuntu-20.04

    env:
      PY_COLORS: 1
      TOXENV: packaging

    steps:
      - name: Switch to using Python 3.6 by default
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install tox
        run: python -m pip install --user tox
      - name: Check out src from Git
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # needed for correct setuptools-scm versioning
      - name: Build dists
        run: python -m tox
      - name: Publish to test.pypi.org
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to pypi.org
        # succeeded||failed trick is used to enforce run even if previous
        # task failed. This avoid cases where we fail to release because an
        # upload fails on test instance (can happen on reruns).
        if: >-
          ${{ (success() || failure()) &&
          github.event_name == 'release' &&
          github.event.action == 'published'
          }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
